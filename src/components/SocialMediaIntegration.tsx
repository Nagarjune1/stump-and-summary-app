
import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Share2, Twitter, Facebook, Instagram, MessageCircle, Copy, Download, Image as ImageIcon } from "lucide-react";
import { toast } from "@/hooks/use-toast";
import html2canvas from "html2canvas";

const SocialMediaIntegration = () => {
  const [shareContent, setShareContent] = useState({
    title: "",
    description: "",
    hashtags: "#Cricket #LiveScoring #CricketMatch"
  });
  const [isGeneratingImage, setIsGeneratingImage] = useState(false);

  const generateShareableImage = async (matchData) => {
    setIsGeneratingImage(true);
    try {
      // Create a temporary element with match scorecard
      const element = document.createElement('div');
      element.innerHTML = `
        <div style="
          width: 600px;
          padding: 20px;
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          color: white;
          font-family: Arial, sans-serif;
          border-radius: 10px;
        ">
          <h2 style="margin: 0 0 20px 0; text-align: center; font-size: 24px;">
            🏏 Cricket Live Score
          </h2>
          <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 8px; margin-bottom: 15px;">
            <h3 style="margin: 0 0 10px 0; font-size: 18px;">Team A vs Team B</h3>
            <div style="display: flex; justify-content: space-between;">
              <div>Team A: 165/4 (18.2 ov)</div>
              <div>Team B: 142/8 (20 ov)</div>
            </div>
          </div>
          <div style="text-align: center; font-size: 14px; opacity: 0.8;">
            Generated by Cricket Scorer Pro
          </div>
        </div>
      `;
      
      document.body.appendChild(element);
      
      const canvas = await html2canvas(element, {
        backgroundColor: null,
        scale: 2
      });
      
      document.body.removeChild(element);
      
      // Convert to blob and create download link
      canvas.toBlob((blob) => {
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = 'cricket-scorecard.png';
        link.click();
        URL.revokeObjectURL(url);
      });

      toast({
        title: "Success",
        description: "Shareable image generated successfully!",
      });
    } catch (error) {
      toast({
        title: "Error",
        description: "Failed to generate image",
        variant: "destructive"
      });
    } finally {
      setIsGeneratingImage(false);
    }
  };

  const shareToTwitter = () => {
    const text = encodeURIComponent(`${shareContent.title}\n\n${shareContent.description}\n\n${shareContent.hashtags}`);
    const url = `https://twitter.com/intent/tweet?text=${text}`;
    window.open(url, '_blank');
  };

  const shareToFacebook = () => {
    const url = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.href)}`;
    window.open(url, '_blank');
  };

  const shareToWhatsApp = () => {
    const text = encodeURIComponent(`${shareContent.title}\n\n${shareContent.description}\n\n${shareContent.hashtags}`);
    const url = `https://wa.me/?text=${text}`;
    window.open(url, '_blank');
  };

  const copyToClipboard = async () => {
    const text = `${shareContent.title}\n\n${shareContent.description}\n\n${shareContent.hashtags}`;
    try {
      await navigator.clipboard.writeText(text);
      toast({
        title: "Copied!",
        description: "Content copied to clipboard",
      });
    } catch (error) {
      toast({
        title: "Error",
        description: "Failed to copy to clipboard",
        variant: "destructive"
      });
    }
  };

  const templates = [
    {
      title: "🏏 Match Result Update",
      description: "What an incredible match! Team A defeated Team B by 23 runs in a thrilling encounter. Outstanding performance by both teams! 🔥",
      hashtags: "#Cricket #MatchResult #CricketMatch #Sports"
    },
    {
      title: "📊 Live Score Update",
      description: "LIVE: Team A 165/4 (18.2 ov) vs Team B 142/8 (20 ov). Exciting finish expected! 🏏⚡",
      hashtags: "#LiveCricket #CricketScore #Live #Cricket"
    },
    {
      title: "🌟 Player Performance Highlight",
      description: "Outstanding century by John Doe! 🏏💯 What a knock under pressure. Pure class and determination! 👏",
      hashtags: "#Century #CricketHero #PlayerOfTheMatch #Cricket"
    }
  ];

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h2 className="text-2xl font-bold flex items-center gap-2">
          <Share2 className="w-6 h-6" />
          Social Media Integration
        </h2>
        <Badge className="bg-purple-100 text-purple-800">
          New Feature
        </Badge>
      </div>

      <Tabs defaultValue="share" className="w-full">
        <TabsList className="grid w-full grid-cols-3">
          <TabsTrigger value="share">Share Content</TabsTrigger>
          <TabsTrigger value="templates">Templates</TabsTrigger>
          <TabsTrigger value="analytics">Social Analytics</TabsTrigger>
        </TabsList>

        <TabsContent value="share" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Create Shareable Content</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <label className="block text-sm font-medium mb-2">Title</label>
                <Input
                  value={shareContent.title}
                  onChange={(e) => setShareContent(prev => ({ ...prev, title: e.target.value }))}
                  placeholder="Enter match title or headline..."
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">Description</label>
                <Textarea
                  value={shareContent.description}
                  onChange={(e) => setShareContent(prev => ({ ...prev, description: e.target.value }))}
                  placeholder="Describe the match highlights..."
                  rows={4}
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">Hashtags</label>
                <Input
                  value={shareContent.hashtags}
                  onChange={(e) => setShareContent(prev => ({ ...prev, hashtags: e.target.value }))}
                  placeholder="#Cricket #LiveScore #Match"
                />
              </div>

              {/* Preview */}
              <div className="p-4 bg-gray-50 rounded-lg">
                <h4 className="font-semibold mb-2">Preview</h4>
                <div className="space-y-2">
                  <div className="font-semibold">{shareContent.title || "Match Title"}</div>
                  <div className="text-gray-700">{shareContent.description || "Match description will appear here..."}</div>
                  <div className="text-blue-600 text-sm">{shareContent.hashtags}</div>
                </div>
              </div>
            </CardContent>
          </Card>

          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <Button onClick={shareToTwitter} className="flex items-center gap-2 bg-blue-500 hover:bg-blue-600">
              <Twitter className="w-4 h-4" />
              Twitter
            </Button>
            <Button onClick={shareToFacebook} className="flex items-center gap-2 bg-blue-700 hover:bg-blue-800">
              <Facebook className="w-4 h-4" />
              Facebook
            </Button>
            <Button onClick={shareToWhatsApp} className="flex items-center gap-2 bg-green-600 hover:bg-green-700">
              <MessageCircle className="w-4 h-4" />
              WhatsApp
            </Button>
            <Button onClick={copyToClipboard} variant="outline" className="flex items-center gap-2">
              <Copy className="w-4 h-4" />
              Copy
            </Button>
          </div>

          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <ImageIcon className="w-5 h-5" />
                Generate Shareable Image
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <p className="text-sm text-gray-600">
                  Create professional-looking scorecards and match summaries that are perfect for social media sharing.
                </p>
                <Button 
                  onClick={() => generateShareableImage({})} 
                  disabled={isGeneratingImage}
                  className="flex items-center gap-2"
                >
                  <Download className="w-4 h-4" />
                  {isGeneratingImage ? "Generating..." : "Generate Image"}
                </Button>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="templates" className="space-y-4">
          <div className="grid gap-4">
            {templates.map((template, index) => (
              <Card key={index} className="cursor-pointer hover:shadow-md transition-shadow">
                <CardContent className="p-4">
                  <div className="flex justify-between items-start mb-3">
                    <h4 className="font-semibold">{template.title}</h4>
                    <Button 
                      size="sm" 
                      variant="outline"
                      onClick={() => setShareContent(template)}
                    >
                      Use Template
                    </Button>
                  </div>
                  <p className="text-gray-600 mb-2">{template.description}</p>
                  <div className="text-blue-600 text-sm">{template.hashtags}</div>
                </CardContent>
              </Card>
            ))}
          </div>
        </TabsContent>

        <TabsContent value="analytics" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Social Media Analytics (Coming Soon)</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-center py-8 text-gray-500">
                <Share2 className="w-12 h-12 mx-auto mb-4 opacity-50" />
                <p>Track your social media engagement and reach.</p>
                <p className="text-sm mt-2">This feature will be available in the next major update.</p>
                
                <div className="mt-6 p-4 bg-blue-50 rounded-lg text-left">
                  <h4 className="font-semibold text-blue-900 mb-2">Planned Features:</h4>
                  <ul className="text-sm text-blue-800 space-y-1">
                    <li>• Share count tracking</li>
                    <li>• Engagement metrics</li>
                    <li>• Popular content analysis</li>
                    <li>• Best posting times</li>
                    <li>• Audience insights</li>
                  </ul>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default SocialMediaIntegration;
